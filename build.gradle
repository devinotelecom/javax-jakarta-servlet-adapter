plugins {
  id "java-library"
  id "idea"
  id "maven-publish"
  // which produces test fixtures [in src/testFixtures/java] can use main and visible for test:  id 'java-test-fixtures'

  id("io.freefair.lombok") version "latest.release"
  id("net.ltgt.errorprone") version "latest.release"
}

repositories {
  mavenLocal()
  mavenCentral {
    mavenContent { releasesOnly() }
  }
  maven {
    url "https://mvn.platform-s.com/repository/internal" // our repo is very slow, use it for our dependencies only
    mavenContent { releasesOnly() }
  }
  maven { url 'https://jitpack.io' }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = "UTF-8" // = compileJava.options.encoding = "UTF-8"
  options.compilerArgs.addAll(["-Xlint:all,-serial", "-parameters"])
  options.release.set(17) // javac --release 7→8..23+
  options.deprecation = true
  options.debug = true

	options.errorprone {
		enabled = true
		disableWarningsInGeneratedCode = true
		excludedPaths = ".*/(generated|test).*/.*"
		disable("UnusedVariable")
		disable("MissingSummary")
		disable("InconsistentCapitalization")
		errorproneArgs = ["-XepExcludedPaths:.*/test/.*"]
	}
}

publishing {// https://docs.gradle.org/current/userguide/publishing_maven.html
  publications {
    maven(MavenPublication) {
      //groupId="com.devinotele" (в gradle.properties); artifactId = auto по имени проекта == folder name
      from components.java
    }
  }
}
java {
  withSourcesJar()
  //×withJavadocJar()
}

dependencies {
  errorprone("com.google.errorprone:error_prone_core:latest.release")
	api("org.jspecify:jspecify:latest.release!!")
	api 'javax.servlet:javax.servlet-api:4.+'
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.+'

	testImplementation("org.junit.jupiter:junit-jupiter:5.11.+!!")
	testImplementation('jakarta.servlet:jakarta.servlet-api:6.+')
}
configurations.configureEach {
	// use slf4j + logback
	exclude group: "commons-logging", module: "commons-logging"
	exclude group: 'org.springframework', module: 'spring-jcl'
	exclude group: "org.apache.logging.log4j", module: "log4j-api"
	exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
	exclude group: "org.jboss.slf4j", module: "slf4j-jboss-logmanager"
}

idea { module { downloadJavadoc = true; downloadSources = true } }

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed" // PASSED, SKIPPED, FAILED
    showStandardStreams = true // show standard out & err of the test JVM on the console
    showExceptions = true
    exceptionFormat = 'full'
  }
  enableAssertions = true
  maxHeapSize = "1G"
  systemProperty("slf4j.detectLoggerNameMismatch", "true")
  systemProperty("file.encoding", "UTF-8")
  systemProperty("java.net.preferIPv4Stack", "true")

  systemProperty("user.timezone", "Europe/Moscow")
  systemProperty("user.language", "en")

  workingDir project.projectDir // Set the working directory to the subproject directory
  systemProperty("user.dir", project.projectDir)
  println "[INFO] ${project.name}.workingDir == $workingDir"
}
lombok { version = "latest.release" }

tasks.withType(AbstractArchiveTask).configureEach {
  preserveFileTimestamps = false
  reproducibleFileOrder = true
}